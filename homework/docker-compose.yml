version: '3.8'

services:
  postgres:
    build:
      context: ./db_service
      dockerfile: Dockerfile
    container_name: api_postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-api_db}
      POSTGRES_USER: ${DB_USER:-api_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-api_password}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-api_user} -d ${DB_NAME:-api_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  rag:
    build:
      context: ./rag_service
      dockerfile: Dockerfile
    container_name: rag_service
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${DB_USER:-api_user}:${DB_PASSWORD:-api_password}@postgres:5432/${DB_NAME:-api_db}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  api:
    build:
      context: ./api_service
      dockerfile: Dockerfile
    container_name: api_service
    ports:
      - "8080:8080"
    depends_on:
      rag:
        condition: service_healthy
    environment:
      RAG_SERVICE_URL: http://rag:8081
      API_USERNAME: ${API_USERNAME:-admin}
      API_PASSWORD: ${API_PASSWORD:-password}
    restart: unless-stopped

volumes:
  postgres_data: 